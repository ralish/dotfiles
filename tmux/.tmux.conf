# Due to race conditions present in tmux prior to v1.9 the 'if-shell' version
# detection method may not work reliably.

# Store the tmux version in an environment variable
run-shell 'tmux setenv -g TMUX_VERSION "$(tmux -V | grep -Eo "[0-9]+\.[0-9]+")"'

# ---------------------------- Virtual terminal -------------------------------

# Use a 256 colour terminal
if-shell '[ $(echo "$TMUX_VERSION >= 2.1" | bc -l) = 1 ]' \
    'set -s default-terminal "tmux-256color"' \
    'set -g default-terminal "screen-256color"'

# Enable true colour support
if-shell '[ $(echo "$TMUX_VERSION >= 2.2" | bc -l) = 1 ]' \
    'set -sa terminal-overrides ",*256col*:Tc"'

# Request terminal focus events
if-shell '[ $(echo "$TMUX_VERSION >= 1.9" | bc -l) = 1 ]' \
    'set -s focus-events on'

# Attempt to set client terminal title
set -g set-titles on

# Format string for client terminal title
set -g set-titles-string "#(whoami)@#h - tmux:#I:#W:#(pwd)"

# ----------------------------- Windows & panes -------------------------------

# Start window indexing from one
set -g base-index 1

# Window history size (lines)
set -g history-limit 10000

# Renumber windows on window close
if-shell '[ $(echo "$TMUX_VERSION >= 1.7" | bc -l) = 1 ]' \
    'set -g renumber-windows on'

# Aggressively resize windows
setw -g aggressive-resize on

# Automatically rename windows
setw -g automatic-rename on

# Start pane indexing from one
if-shell '[ $(echo "$TMUX_VERSION >= 1.6" | bc -l) = 1 ]' \
    'setw -g pane-base-index 1'

# Support UTF-8 sequences (automatic from v2.1)
if-shell '[ $(echo "$TMUX_VERSION <= 2.1" | bc -l) = 1 ]' \
    'setw -g utf8 on'

# ----------------------------- Keyboard input --------------------------------

# Effectively disable escape sequence delay
#
# This isn't completely disabled by setting to zero as it sporadically causes
# unintended output on startup of the tmux server. The cause is unknown but it
# seems clear that it's a race condition, and others have reported the issue.
#
# See: https://github.com/microsoft/WSL/issues/5931
if-shell '[ $(echo "$TMUX_VERSION >= 1.2" | bc -l) = 1 ]' \
    'set -s escape-time 1'

# Key bindings style in copy mode
setw -g mode-keys vi

# Use xterm-style Fn key sequences
setw -g xterm-keys on

# ------------------------------ Mouse support --------------------------------

# Enable mouse support (replaces mode-mouse & mouse-(resize|select)-* options)
if-shell '[ $(echo "$TMUX_VERSION >= 2.1" | bc -l) = 1 ]' \
    'set -g mouse on'

# Enable resizing of panes by dragging on their borders
if-shell '[ $(echo "$TMUX_VERSION >= 1.5 && $TMUX_VERSION <= 2.0" | bc -l) = 1 ]' \
    'set -g mouse-resize-pane on'

# Enable selection of current pane by clicking
if-shell '[ $(echo "$TMUX_VERSION >= 1.1 && $TMUX_VERSION <= 2.0" | bc -l) = 1 ]' \
    'set -g mouse-select-pane on'

# Enable selecting pane by clicking status line name
if-shell '[ $(echo "$TMUX_VERSION >= 1.5 && $TMUX_VERSION <= 2.0" | bc -l) = 1 ]' \
    'set -g mouse-select-window on'

# Request mouse input as UTF-8 (automatic from v2.1)
if-shell '[ $(echo "$TMUX_VERSION >= 1.5 && $TMUX_VERSION <= 2.1" | bc -l) = 1 ]' \
    'set -g mouse-utf8 on'

# Enable mouse support in copy and choice modes
if-shell '[ $(echo "$TMUX_VERSION <= 2.0" | bc -l) = 1 ]' \
    'setw -g mode-mouse on'

# ------------------------------- Status line ---------------------------------

# Time to display messages (ms)
set -g display-time 2000

# Display the status line
set -g status on

# Update interval (secs)
set -g status-interval 5

# Key bindings style
set -g status-keys vi

# Support UTF-8 sequences (automatic from v2.1)
if-shell '[ $(echo "$TMUX_VERSION <= 2.1" | bc -l) = 1 ]' \
    'set -g status-utf8 on'

# Disable message display on window activity (needs monitor-activity)
set -g visual-activity off

# Monitor for activity in windows
setw -g monitor-activity on

# airline: Generated from vim-airline by tmuxline
source-file ~/.config/tmux/airline.conf

# hardstatus: Port of our screen hardstatus line
#source-file ~/.config/tmux/hardstatus.conf

# ------------------------------ Miscellaneous --------------------------------

# Colour of the built-in clock
setw -g clock-mode-colour magenta

# Hour format of the built-in clock
setw -g clock-mode-style 12

# ------------------------------ Key bindings ---------------------------------

# Replace the default command prefix to match Screen
unbind C-b
set -g prefix C-a

# Key binding for sending commands to nested sessions
bind a send-prefix

# Use current working directory for new windows/panes
if-shell '[ $(echo "$TMUX_VERSION >= 1.9" | bc -l) = 1 ]' \
    'bind c new-window -c "#{pane_current_path}"; \
     bind "\"" split-window -c "#{pane_current_path}"; \
     bind % split-window -h -c "#{pane_current_path}"'

# Quick navigation to next/previous window
bind C-n next-window
bind C-p previous-window

# Improved switching to "last active" window/pane
bind-key C-a if-shell 'test $(tmux list-panes | wc -l) -gt 1' 'last-pane' 'last-window'

# Reload tmux configuration
bind r source-file ~/.tmux.conf\; display-message 'Reloaded .tmux.conf'

# Toggle status line
bind s set status

# Synchronise input across panes
bind S setw synchronize-panes

# Vim-style selection and copy
if-shell '[ $(echo "$TMUX_VERSION >= 2.4" | bc -l) = 1 ]' \
   'bind -T copy-mode-vi v send-keys -X begin-selection; \
    bind -T copy-mode-vi y send-keys -X copy-selection' \
   'bind -t vi-copy v begin-selection; \
    bind -t vi-copy y copy-selection'

# Open requested man page in a new pane
bind / command-prompt "split-window 'exec man %%'"

# Open htop/top in a new pane
bind '~' split-window 'if command -v htop > /dev/null; then htop; else top; fi'

# vim: syntax=tmux cc=80 tw=79 ts=4 sw=4 sts=4 et sr
