; Windows File Manager (WinFile) settings
;
; Last reviewed release: v10.4.0.0
; Default file path: %APPDATA%\Microsoft\Winfile\WINFILE.INI

; Because WinFile writes various settings which frequently change into its
; configuration file (e.g. window position) we don't store it directly in the
; repository. Instead, use this file as a template and copy it to WINFILE.INI.

[Settings]
; Options
; Toolbar
ToolBar=1
; Drivebar
DriveBar=1
; Status Bar
StatusBar=1
; Open New Window on Connect
NewWinOnNetConnect=1
; Minimize on Use
MinOnRun=0
; Save Settings on Exit
Save Settings=1

; Options -> Confirmation
; File Delete
ConfirmDelete=0
; Directory Delete
ConfirmSubDel=1
; File Replace
ConfirmReplace=1
; Mouse Action
ConfirmMouse=1
; Disk Commands
ConfirmFormat=1
; Modifying System, Hidden, Read Only files
ConfirmSystemHiddenReadOnly=1

; Options -> Font
; Font
Face=Microsoft Sans Serif
; Font Style
FaceWeight=400
; Size
Size=8
; Checkboxes selected by bitwise OR:
; Display Lowercase for FAT Drives (0x1)
; Display Lowercase for All Drives (0x8)
LowerCase=0

; Options -> Additional Preferences
; Editor Path
EditorPath=C:\Users\SDL\AppData\Local\Programs\Microsoft VS Code\Code.exe
; Disable toolbar visual styling
DisableVisualStyles=0
; Create Goto Index on Launch
IndexOnLaunch=1
; Language
UILanguage=en-US

; -------------------------------------------
; Remaining settings aren't exposed in the UI
; -------------------------------------------

; Q123819: File Manager I/O Optimizations Slow other File Transfers
; https://jeffpar.github.io/kbarchive/kb/123/Q123819/
ChangeNotifyTime=3000

; Font in the drive drop-down list
DriveListFace=Microsoft Sans Serif

; Goto settings
CachedPath=c:\
GotoCachePunctuation=- _.
IndexHiddenSystem=0

; Right-to-left UI
MirrorContent=0

; Scroll to selected directory
ScrollOnExpand=1

; Extensions loaded into File Manager
;
; Each extension is specified as a key-value pair, where the key is the human-
; readable name of the extension (spaces permitted), and the value is the path
; to the extension which is passed to LoadLibrary(). Each extension must expose
; a FMExtensionProcA (ANSI) and/or a FMExtensionProcW (Unicode) procedure. Up
; to 10 extensions can be specified.
[Addons]
